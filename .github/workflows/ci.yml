name: CI - Build and Test Docker Image

on:
  schedule:
    - cron: '0 12 * * *'  # Every day at 12:00 PM UTC
  workflow_dispatch:
    inputs:
      top:
        description: 'Number of sources to process'
        required: false

jobs:
  build-test:
    runs-on: ubuntu-latest
    environment: labnotes  # Add this line to use environment secrets

    env:
      REPO: labnotes

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2  # Change to your S3 bucket region

      - name: Build Docker image
        run: |
          docker build -t ${{ env.REPO }} .
          # Save image as tar file
          docker save ${{ env.REPO }} > /tmp/labnotes-image.tar

      - name: Upload Docker image
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: /tmp/labnotes-image.tar
          retention-days: 1

      - name: Verify secrets are configured
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          FIRECRAWL_API_KEY: ${{ secrets.FIRECRAWL_API_KEY }}
          WEBHOOK_TOKEN: ${{ secrets.WEBHOOK_TOKEN }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          LINKEDIN_API_TOKEN: ${{ secrets.LINKEDIN_API_TOKEN }}
          SUPABASE_TOKEN: ${{ secrets.SUPABASE_TOKEN }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        run: |
          echo "Checking secrets availability..."
          
          required_secrets=(
            OPENAI_API_KEY
            FIRECRAWL_API_KEY
            WEBHOOK_TOKEN
            SLACK_BOT_TOKEN
            LINKEDIN_API_TOKEN
            SUPABASE_TOKEN
            SUPABASE_URL
          )

          for secret in "${required_secrets[@]}"; do
            value="${!secret}"
            if [ -z "$value" ]; then
              echo "❌ $secret is NOT available as environment variable"
              exit 1
            else
              echo "✅ $secret is available (length: ${#value})"
            fi
          done

  website:
    needs: build-test
    runs-on: ubuntu-latest
    environment: labnotes  # Add this line to use environment secrets

    env:
      REPO: labnotes
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      SUPABASE_TOKEN: ${{ secrets.SUPABASE_TOKEN }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: /tmp/

      - name: Load Docker image
        run: |
          docker load < /tmp/labnotes-image.tar

      - name: Run workflow
        run: |
          docker run -v $(pwd)/out:/app/out \
          -e OPENAI_API_KEY="$OPENAI_API_KEY" \
          -e FIRECRAWL_API_KEY="$FIRECRAWL_API_KEY" \
          -e SUPABASE_TOKEN="$SUPABASE_TOKEN" \
          -e SUPABASE_URL="$SUPABASE_URL" \
          -e ENV_FOR_DYNACONF="website" \
          ${{ env.REPO }} \
          /bin/bash  ./labnotes/scripts/exec_website.sh ${{ inputs.top }}

          ls -la ./out/

      - name: Save result
        id: save
        run: |
          # Generate date path (YYYY/MM/DD format)
          DATE_PATH=$(date +"%Y/%m/%d")
          echo "Publishing to path: $DATE_PATH"
          
          # Check if file exists
          if [ -f "./out/summarised_results.json" ]; then
            aws s3 cp ./out/summarised_results.json s3://labnotes-storage/$DATE_PATH/summarised_results.json
            echo "s3_file_path=$DATE_PATH/summarised_results.json" >> $GITHUB_OUTPUT
            echo "publish_success=true" >> $GITHUB_OUTPUT
          else
            echo "No collect files found in ./out/"
            ls -la ./out/
            exit 1  # This will mark the step as failed
          fi

      - name: Publish result
        id: publish
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          LINKEDIN_API_TOKEN: ${{ secrets.LINKEDIN_API_TOKEN }}
          PERSON_URN: ${{ secrets.PERSON_URN }}
        run: |
          docker run -v $(pwd)/out:/app/out \
          -e LINKEDIN_API_TOKEN="$LINKEDIN_API_TOKEN" \
          -e SLACK_BOT_TOKEN="$SLACK_BOT_TOKEN" \
          -e PERSON_URN="$PERSON_URN" \
          -e ENV_FOR_DYNACONF="website" \
          ${{ env.REPO }} \
          uv run labnotes-post

  mountainmap:
    needs: build-test
    runs-on: ubuntu-latest
    environment: labnotes  # Add this line to use environment secrets

    env:
      REPO: labnotes
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      SUPABASE_TOKEN: ${{ secrets.SUPABASE_TOKEN }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: /tmp/

      - name: Load Docker image
        run: |
          docker load < /tmp/labnotes-image.tar

      - name: Run workflow
        run: |
          docker run -v $(pwd)/out:/app/out \
          -e OPENAI_API_KEY="$OPENAI_API_KEY" \
          -e FIRECRAWL_API_KEY="$FIRECRAWL_API_KEY" \
          -e SUPABASE_TOKEN="$SUPABASE_TOKEN" \
          -e SUPABASE_URL="$SUPABASE_URL" \
          -e ENV_FOR_DYNACONF="mountainmap" \
          ${{ env.REPO }} \
          /bin/bash ./labnotes/scripts/exec_mountainmap.sh ${{ inputs.top }}

          ls -la ./out/